image: nixos/nix

workflow:
  auto_cancel:
    on_new_commit: interruptible

default:
  interruptible: true

variables:
  IMAGE_TAG: v0.1.0
  OPTINIX_CI_IMAGE: $CI_REGISTRY_IMAGE/ci:$IMAGE_TAG
  GOPATH: $CI_PROJECT_DIR/.go

stages:
  - pre
  - deps
  - test
  - build
  - release

.docker:
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    IMMUTABLE: "true"
  services:
    - docker:dind
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
  before_script:
    - nix-env -iA nixpkgs.docker nixpkgs.go-task nixpkgs.cacert
    - mkdir -p /etc/nix
    - |
      cat >> /etc/nix/nix.conf << EOF
      experimental-features = nix-command flakes
      extra-platforms = x86_64-linux i686-linux
      system-features = benchmark big-parallel nixos-test i686
      substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
      trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=
      EOF

.task:
  stage: test
  image: $OPTINIX_CI_IMAGE
  variables:
    CGO_ENABLED: "0"
  cache:
    paths:
      - ${GOPATH}/pkg/mod
    policy: pull
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  before_script:
    - mkdir -p /tmp

publish:docker:ci:
  stage: pre
  variables:
    IMAGE: $OPTINIX_CI_IMAGE
    FLAKE_TARGET: container-ci
    LOCAL_IMAGE: optinix-dev
    IMMUTABLE: true
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /UPDATE_IMAGE_TAG/
      when: on_success
  extends:
    - .docker
  script:
    - task docker:publish

download:dependency:
  extends:
    - .task
  stage: deps
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - go.mod
        - go.sum
  script:
    - go mod download
  cache:
    policy: pull-push

lint:
  extends:
    - .task
  script:
    - task lint

generate:
  extends:
    - .task
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - task generate
    - git diff --exit-code

tests:unit:
  extends:
    - .task
  variables:
    XDG_DATA_HOME: "/tmp/"
  script:
    - task tests:unit

tests:integration:
  extends:
    - .task
  variables:
    XDG_DATA_HOME: "/tmp/"
  script:
    - task tests:integration

build:binary:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  extends:
    - .task
  script:
    - nix build

release:
  stage: release
  extends:
    - .task
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    GIT_DEPTH: 0
  script:
    - task release
